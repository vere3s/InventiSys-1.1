<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPedidosAbiertos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>